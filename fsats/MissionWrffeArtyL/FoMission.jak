layer MissionWrffeArtyL;

import java.io.*;

import log.Log;

// FistMission

public refines State_machine FoMission {
    // Don't wait for MFR on EOM.

    Transition_condition wrffeArtyAccepted1 false && Proceed( message );

            /*REFINES EDGE no longer supported.  
       Move predicate or body into method, and extend method.
    Refines Transition wrffeArtyAccepted1 : wrffeArtyAccepted -> wrffeArtyEnding
                condition false do {} */
        
            // Ignore shot message.

    Transition_condition wrffeArtyAccepted2
            ( message instanceof ShotMessage ) || ( false && Proceed( message ) );

    Transition_action wrffeArtyAccepted2 {
        if ( false )
            Proceed( message );
    }

            /*REFINES EDGE no longer supported.  
       Move predicate or body into method, and extend method. 
    Refines Transition wrffeArtyAccepted2 : wrffeArtyAccepted -> wrffeArtyAccepted
                condition (message instanceof ShotMessage) 
             do {} */
        
            // On RoundsComplete send EOM to gun and stop.
    Transition wrffeArtyAccepted3 : wrffeArtyAccepted -> stop
        condition ( message instanceof RoundsCompleteMessage )
        do
            {
            EomMessage eomMessage = new EomMessage( getId() );
            if ( initiatingUnit != null )
                eomMessage.setInitiatingUnitId( initiatingUnit.intValue() );
            sendUp( eomMessage );
        }

/*
        // net effect of first Refines is to have a false Transition condition

        public boolean wrffeArtyAccepted1Test(Event message) {
           return false;
        }

        // net effect of second Refines is to change the boolean and
        // action methods

        public boolean wrffeArtyAccepted2Test(Event message) {
           return (message instanceof ShotMessage);
        }

        public void wrffeArtyAccepted2Action(Event message) { }
*/

}
