
#! JavaM => metamodels/JavaM.ecore 


layer = JavaM::Layer.new(:name => 'test', :identifier => 'layer') 
package_used = JavaM::Package.new(:name => 'used', :identifier => 'used', :ownerLayer => layer)
package_feature = JavaM::Package.new(:name => 'test', :identifier => 'feature', , :ownerLayer => layer)

# intr.jak

feature_intf = JavaM::Interface.new(:name => 'intf', :identifier => 'feature.intf', :visibility => 'public', :isRefinement => true, :owner => package_feature)

#  implicitly imported files

primitiveType_void = JavaM::PrimitiveType.new(:name =>'void', :identifier =>'void', :owner => package_used)
primitiveType_int = JavaM::PrimitiveType.new(:name =>'int', :identifier =>'int', :owner => package_used)

# intr.jak

method_feature_intf_foo12 = JavaM::Method.new(:name => 'feature.intf.foo()', :identifier => 'feature.intf.foo()', :type => primitiveType_void, :nesting => 0, :visibility => 'package', :ownerInterface => feature_intf)

method_feature_intf_bar1int2 = JavaM::Method.new(:name => 'feature.intf.bar(int)', :identifier => 'feature.intf.bar(int)', :type => primitiveType_int, :nesting => 0, :visibility => 'package', :ownerInterface => feature_intf)
parameter_feature_intf_bar1int2_x = JavaM::Parameter.new(:name => 'feature.intf.bar(int).x', :identifier => 'feature.intf.bar(int).x', :type => primitiveType_int, :nesting => 0, :ownerMethod => method_feature_intf_bar1int2)

