bali2ref=B.GramGui[B.codegen[B.bali2CT[B.require[B.collect[B.visitor[B.bali]]]]]]
extractToken=B.extractToken[B.require[B.collect[B.visitor[B.bali]]]]

reform=J.antDerive[J.FormatSmx[J.FormatIntx[J.FormatClassX[J.FormatSm[J.FormatLayer[J.FormatLocalId[J.FormatSource[J.FormatAhead[J.FormatGscope[J.FormatAst[J.FormatJava[J.FormatBase[J.Comments[J.Java]]]]]]]]]]]]]]

mmatrix=J.antDerive[J.Sm2mm[J.Intmm[J.Classmm[J.smempty[J.AspectGram[J.LocalIdEmpty[J.Sourcemm[J.Basemm[J.mmGscope[J.gscopeEmpty[J.mmAst[J.astEmpty[J.linenum[J.Java]]]]]]]]]]]]]]]

balicomposer=B.requireComposer[B.composer[B.require[B.collect[B.visitor[B.bali]]]]]
bali2jak=B.requireBali2jak[B.bali2jak[B.codegen[B.require[B.collect[B.visitor[B.bali]]]]]]
bali2javacc=B.requireBali2javacc[B.bali2javacc[B.codegen[B.require[B.collect[B.visitor[B.bali]]]]]]

drc=DR.antCompose[DR.core]

jakbasic=J.antDerive[J.layers[J.gscope[J.ast[J.CapSuper[J.CapSuperGram[J.StringAST[J.Java]]]]]]]
jakbasic-old=J.layers[J.gscope[J.ast[J.Java]]]

njbold=J.sm[J.StringAST[J.compose[J.layer_def[J.macroLayer[J.gscope[J.ast[J.Java]]]]]]]
njb=J.sm[J.sortfd[J.StringAST[J.layers[J.gscope[J.ast[J.Comments[J.Java]]]]]]]]
njb2=J.antDerive[J.AspectTrans[J.j2jBase[J.Source[J.sm4[J.sortfd[J.StringAST[J.Comments[J.Java]]]]]]]]]

jak=J.antDerive[J.layers[J.p3[J.match[J.symbols[J.gscope[J.ast[J.StringAST[J.Java]]]]]]]]
jak-old=J.layers[J.macroLayer[J.p3[J.match[J.symbols[J.gscope[J.ast[J.Java]]]]]]]

dreck=J.drecklang[J.StringAST[J.Java]]]
pj=J.antCompose[J.AspectDecl[J.CommonError[J.CompSm[J.CompInt[J.CompClass[J.LocalId[J.preprocess[J.Comments[J.StringAST[J.sortfd[J.Java]]]]]]]]]]]]

jampack=J.antCompose[J.CompSm[J.CompInt[J.CompClass[J.smempty[J.AspectDecl[J.LocalId[J.SourceError[J.preprocess[J.CommonError[J.CommonBase[J.preprocessGscope[J.gscopeEmpty[J.CompClassAst[J.LocalIdAst[J.CommonErrorAst[J.astEmpty[J.Comments[J.StringAST[J.sortfd[J.Java]]]]]]]]]]]]]]]]]]]]

unp=J.unpackAst[J.gscopeEmpty[J.astEmpty[J.unpackLayers[J.Comments[J.StringAST[J.CapSuperGram[J.Java]]]]]]]
unp2=J.gscopeEmpty[J.astEmpty[J.unpackSm[J.unpackLayers[J.Comments[J.StringAST[J.Java]]]]]]
dsml=J.sm[J.sortfd[J.Comments[J.StringAST[J.Java]]]]
diffJava=J.diff[J.Java]

mixin=J.antCompose[J.mixinSm[J.mixinInt[J.mixinClass[J.smempty[J.AspectDecl[J.LocalId[J.Source[J.mixinbase[J.CommonError[J.CommonBase[J.gscopeEmpty[J.LocalIdAst[J.CommonErrorAst[J.astEmpty[J.Comments[J.StringAST[J.Java]]]]]]]]]]]]]]]]]

unmixin=J.antDerive[J.unmixinsm[J.unmixinint[J.unmixinclass[J.smempty[J.AspectGram[J.LocalIdEmpty[J.Source[J.unmixinbase[J.unmixinbaseAst[J.gscopeEmpty[J.astEmpty[J.Comments[J.StringAST[J.Java]]]]]]]]]]]]]

jedi=JMax.GscopeHarvest[JMax.AstHarvest[JMax.LocalIdGen[JMax.LocalIdHarvest[JMax.LocalIdAPI[JMax.LayerGen[JMax.LayerHarvest[JMax.LayerAPI[JMax.IntXHarvest[JMax.IntXAPI[JMax.ClassXHarvest[JMax.ClassXAPI[JMax.SourceGen[JMax.SourceHarvest[JMax.SourceAPI[JMax.SmXHarvest[JMax.SmXAPI[JMax.AheadGen[JMax.AheadHarvest[JMax.AheadAPI[JMax.SmGen[JMax.SmHarvest[JMax.SmWriter[JMax.SmAPI[JMax.JavaGen[JMax.JavaHarvest[JMax.JavaCommentParser[JMax.JavaTagHandlers[JMax.JavaWriter[JMax.JavaAPI[JMax.Constant]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]

jak2java=J.antDerive[J.j2jSmx[J.j2jIntx[J.j2jClassx[J.sm4[J.AspectTrans[J.LocalIdError[J.Source[J.j2jBase[J.gscope[J.j2jast[J.ast[J.sortfd[J.StringAST[J.Comments[J.Java]]]]]]]]]]]]]]]

jak2java-old=J.antDerive[J.AspectTrans[J.j2jBase[J.Source[J.sm4[J.sortfd[J.StringAST[J.Comments[J.Java]]]]]]]]]
j3j=J.j2jBase[J.sm2[J.sortfd[J.StringAST[J.layers[J.gscope[J.ast[J.Comments[J.Java]]]]]]]]]
MSCCompiler=J.msc[J.StringAST[J.Java]]
PJMSC=J.CompMSC[J.CompSm[J.CompInt[J.CompClass[J.preprocess[J.Comments[J.StringAST[J.sortfd[J.Java]]]]]]]]
