layer JavaHarvest;

import java.util.Vector;
import Jakarta.util.FixDosOutputStream;
import Jakarta.util.Util;
import java.io.*;
import java.util.*;

/** MethodDeclarator
 *      : QName "(" [ AST_ParList ] ")" [ Dims ]::MthDector
 *      ;
 * @layer<JavaHarvest>
 */
    
public refines class MthDector {
    public void execute() 
    {
        String method_name = ( ( AstToken )arg[0].tok[0] ).tokenName();
        _harvest_method = new  MethodDocJTS( method_name );
        Super().execute();
                                           
        // Assign the parameters array to the method
        // arg1 is an AstOptNode an optional node, we have to get the first
        // kid if any, which is AST_ParList type, if not null set the 
        // parameters otherwise just make them null
        AST_ParList kid = ( AST_ParList )arg[1].arg[0];
        if ( kid == null ) {
            _harvest_method.setParameters( new  ParameterJTS[0] );
            return;
        }
        _harvest_method.setParameters( kid.parametersArray );
        
    } // of execute
}
