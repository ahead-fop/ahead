# TYPE ASSIGNMENTS:
#
# Each unit processed by the composer is assigned a type as defined by
# properties in this file.  The unit's type is found via the following
# multi-stage search through properties.
#
# First, each unit is assigned a *base* key.  If the unit is a directory, the
# base key is "unit.directory" and, if the unit is a normal file, the base key
# is "unit.file".  Currently, the only units are either directories or files.
#
# Next, if the unit has an extension as part of its name, a property name is
# formed by appending the extension to the base key.  A file named "main.java"
# yields property name "unit.file.java" while a directory named "main.java"
# yields "unit.directory.java".  If this name has a property assignment, the
# search terminates.
#
# Otherwise, the base key is used as a property name.  If this name has a
# property assignment, the search terminates.
#
# Otherwise, the composer uses type name "FileUnit".

unit.directory		: DirectoryCollective

unit.file		: FileUnit

unit.file.b		: BaliComposerFileUnit
unit.file.bak		: IgnoreFileUnit
unit.file.BAK		: IgnoreFileUnit
unit.file.cpp     	: CppFileUnit
unit.file.drc		: DRCFileUnit
unit.file.equation	: EquationFileUnit
unit.file.equations	: EquationsFileUnit
unit.file.expl    	: IgnoreFileUnit
unit.file.gif     	: LastFileUnit 
unit.file.h       	: CppFileUnit
#unit.file.jak		: LabeledJamPackFileUnit
#unit.file.jak		: JamPackFileUnit
unit.file.jak		: MixinFileUnit
unit.file.jar		: SingletonFileUnit
unit.file.java		: SingletonFileUnit
unit.file.jpg    	: LastFileUnit
unit.file.JPG  		: LastFileUnit
unit.file.notes		: IgnoreFileUnit
unit.file.pdf     	: LastFileUnit
unit.file.png     	: LastFileUnit
unit.file.prefix	: AdjoinFileUnit
unit.file.properties	: PropertiesFileUnit
unit.file.pyc		: IgnoreFileUnit
unit.file.pyo		: IgnoreFileUnit
unit.file.sql		: AdjoinFileUnit
unit.file.SQL		: AdjoinFileUnit
unit.file.suffix	: ReverseAdjoinFileUnit
unit.file.swp		: IgnoreFileUnit
unit.file.timestamp	: IgnoreFileUnit
unit.file.tool    	: EquationFileUnit
unit.file.txt		: AdjoinFileUnit
unit.file.vm		: VelocityFileUnit
unit.file.vw		: AdjoinFileUnit
unit.file.VW		: AdjoinFileUnit
unit.file.zip     	: LastFileUnit

#added for guis and html
unit.file.db      : IgnoreFileUnit
unit.file.css     : LastFileUnit

#added for XAK
unit.file.xml     : XakFileUnit
unit.file.xsl	  : XakFileUnit
unit.file.xsd     : XakFileUnit
unit.file.jsp     : LastFileUnit
unit.file.jspx    : XakFileUnit
unit.file.tld     : XakFileUnit
unit.file.htm     : IgnoreFileUnit
#unit.file.htm     : XakFileUnit
unit.file.html    : XakFileUnit
unit.file.xhtml   : XakFileUnit
unit.file.scxml	  : XakFileUnit
# added for XAK2
unit.file.xak     : Xak2FileUnit


# UNIT FACTORY:
#
# The composer manipulates units by means of a factory object that satisfies
# the interface composer.algebra.AlgebraFactory.  The property below can be
# changed to specify a different factory class:

composer.unit.Factory	: composer.unit.Factory

# FILE AND DIRECTORY EXCLUSIONS:
#
# If the standard factory class (as above) is used, then the properties
# "composer.directory.ignore" and "composer.file.ignore" may be defined to
# specify directory/file names to be ignored.  The property value should be a
# pattern string as defined by "java.util.regex".  Refer to the API for class
# "java.util.regex.Pattern" for more information.

composer.directory.ignore	: CVS
composer.file.ignore		: .*~|#.*#|%.*%|[.]#.*|core

# EXTERNAL TOOLS:
#
# The composer might need to use an external tool to complete its work.  This
# section defines properties providing paths to tools.  The property names are
# of the form "tool." followed by the short name of the tool.  The values
# should be paths to an executable for the tool.
#
# If a tool is used by the composer, but not defined here, the composer will
# try to avoid using the tool.  This may not be possible, in which case an
# error will occur.  Similarly, if the path for a tool is invalid, an error
# will occur when the composer tries to use that tool.

tool.ant	: ant
